<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>system design on Louisa Shing</title>
    <link>https://laweeza.github.io/tags/system-design/</link>
    <description>Recent content in system design on Louisa Shing</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 23 Feb 2022 00:33:37 -0800</lastBuildDate><atom:link href="https://laweeza.github.io/tags/system-design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>System Design Capstone</title>
      <link>https://laweeza.github.io/posts/sdc/</link>
      <pubDate>Wed, 23 Feb 2022 00:33:37 -0800</pubDate>
      
      <guid>https://laweeza.github.io/posts/sdc/</guid>
      <description>Part 1 SDC (System Design Capstone) was one of the most rewarding, yet challenging, applications I have had to work on.
Working with a team of 2 other engineers, our goal was to transform and breakdown a monolithic architecture into 3 different microservices. Our client had an e-commerce website with a legacy API, and needed us to revamp the backend to scale for production level web traffic. I was solely responsible for the user questions and answers widget, and was given millions of CSV files to load into the new database I had to design.</description>
    </item>
    
    <item>
      <title>System Design Capstone</title>
      <link>https://laweeza.github.io/posts/sdc2/</link>
      <pubDate>Wed, 23 Feb 2022 00:33:37 -0800</pubDate>
      
      <guid>https://laweeza.github.io/posts/sdc2/</guid>
      <description>Part 2 While designing the schemas for my database, I found clear relations between the users, questions, and answers. I had a hard time creating schemas with Mongoose, even when I tried to embed the documents. Mapping out the data into relational tables seemed more intuitive to me.
MongoDB/Mongoose initially seemed really appealing since I felt that it would allow me to quickly play with the schemas. It was more flexible than a relational database.</description>
    </item>
    
  </channel>
</rss>
